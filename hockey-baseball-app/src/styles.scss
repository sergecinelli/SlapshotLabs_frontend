// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

// Define custom color palettes
$custom-primary-palette: (
  0: #000000,
  10: #370002,
  20: #550005,
  25: #650008,
  30: #75000a,
  35: #85000d,
  40: #95000f,
  50: #cf142b,
  // Your primary red color
  60: #d53545,
  70: #db545f,
  80: #e17279,
  90: #e78f93,
  95: #edacad,
  98: #f3c8c7,
  99: #f9e4e1,
  100: #ffffff,
);

$custom-secondary-palette: (
  0: #000000,
  10: #090b0c,
  // Your dark text color
  20: #1a1f21,
  25: #252b2d,
  30: #303738,
  35: #3b4344,
  40: #464f50,
  50: #5e6869,
  60: #778f9c,
  // Your secondary bg color
  70: #8fa2af,
  80: #a7b5c2,
  90: #bfc8d5,
  95: #d7dbe8,
  98: #efeefb,
  99: #f7f6ff,
  100: #ffffff,
);

html {
  @include mat.theme(
    (
      color: (
        primary: $custom-primary-palette,
        secondary: $custom-secondary-palette,
        tertiary: $custom-primary-palette,
      ),
      typography: Roboto,
      density: 0,
    )
  );
}

body {
  // Light color theme with custom colors
  color-scheme: light;

  // Custom background and text colors
  background-color: #ffffff; // White background as requested
  color: #090b0c; // Dark text color as requested
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
/* You can add global styles to this file, and also import other style files */

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom CSS properties for easy access */
:root {
  --color-primary: #cf142b;
  --color-dark: #090b0c;
  --color-secondary: #778f9c;
  --color-teritary: #999999;
  --color-white: #ffffff;
}

/* Custom utility classes */
@layer utilities {
  .text-custom-primary {
    color: var(--color-primary);
  }
  .text-custom-dark {
    color: var(--color-dark);
  }
  .text-custom-secondary {
    color: var(--color-secondary);
  }
  .bg-custom-primary {
    background-color: var(--color-primary);
  }
  .bg-custom-secondary {
    background-color: var(--color-secondary);
  }
  .bg-custom-white {
    background-color: var(--color-white);
  }
  .border-custom-primary {
    border-color: var(--color-primary);
  }
  .border-custom-secondary {
    border-color: var(--color-secondary);
  }
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

/* Global Button States */
/* Override Material Design disabled button styles */
.mat-mdc-button.mat-mdc-button-disabled {
  background-color: var(--color-secondary) !important;
  color: white !important;
  opacity: 1 !important;
  cursor: not-allowed;
}

.mat-mdc-outlined-button.mat-mdc-button-disabled {
  background-color: var(--color-secondary) !important;
  color: white !important;
  border-color: var(--color-secondary) !important;
  opacity: 1 !important;
  cursor: not-allowed;
}

/* Loading state styling for buttons */
.loading-button {
  background-color: var(--color-secondary) !important;
  color: white !important;
  
  &.mat-mdc-outlined-button {
    border-color: var(--color-secondary) !important;
  }
}

/* Resend button styling */
.resend-button {
  transition: all 0.3s ease;
  
  &:disabled {
    opacity: 1 !important;
    cursor: not-allowed;
    background-color: var(--color-secondary) !important;
    color: white !important;
    border-color: var(--color-secondary) !important;
  }
  
  &:not(:disabled):hover {
    opacity: 0.9;
  }
}

/* Global Form Field Styles */
.mat-mdc-text-field-wrapper {
  padding-left: 0;
  padding-right: 0;
}

.mat-internal-form-field > label {
  padding-left: 0;
  font-size: 14px;
}

.mdc-floating-label {
  padding-bottom: 4px;
}

/* Placeholder color overrides */
.mat-mdc-input-element::placeholder {
  color: var(--color-secondary) !important;
  opacity: 0.7 !important;
}

.mat-mdc-input-element::-webkit-input-placeholder {
  color: var(--color-secondary) !important;
  opacity: 0.7 !important;
}

.mat-mdc-input-element::-moz-placeholder {
  color: var(--color-secondary) !important;
  opacity: 0.7 !important;
}

.mat-mdc-input-element:-ms-input-placeholder {
  color: var(--color-secondary) !important;
  opacity: 0.7 !important;
}

/* Global Mat-card elevation */
mat-card {
  box-shadow:
    0 8px 25px rgba(0, 0, 0, 0.15),
    0 4px 10px rgba(0, 0, 0, 0.1) !important;
}

/* Global Material Error Styling */
mat-error {
  color: var(--color-primary) !important;
  padding-left: 0 !important;
  margin-left: -16px !important;
  font-size: 0.875rem;
}

/* Material Tooltip Styling */
.mat-mdc-tooltip {
  background-color: rgba(97, 97, 97, 0.9) !important;
  color: white !important;
  font-size: 12px !important;
  padding: 6px 8px !important;
  border-radius: 4px !important;
  max-width: 200px !important;
  word-wrap: break-word !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15) !important;
}

.cdk-overlay-container .mat-mdc-tooltip {
  background-color: rgba(97, 97, 97, 0.9) !important;
  color: white !important;
}
